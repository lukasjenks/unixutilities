#!/bin/bash

function cpuusers() {

  # Get snapshot of ps command at time of this script's execution
  psoutput="$(ps -ely --no-header | tr -s ' ')"

  # Parse output from ps to get all uids currently running process(es)
  uids=$(echo "$psoutput" | cut -d ' ' -f 2 | sort -n | uniq)

  # Iterate through each UID
  while read uid; do

    # Sum hours of all running processes of this uid
    hours=$(echo "$psoutput" | grep "$uid" | cut -d ' ' -f 12 | cut -d ':' -f 1)
    totalhours=0
    while read hourfield; do
	totalhours=$(( totalhours + 10#$hourfield ))
    done <<< "$hours"

    # Sum minutes of all running processes of this uid
    mins=$(echo "$psoutput" | grep "$uid" | cut -d ' ' -f 12 | cut -d ':' -f 2)
    totalmins=0
    while read minfield; do
	totalmins=$(( totalmins + 10#$minfield ))
    done <<< "$mins"

    # Sum seconds of all running processes of this uid
    secs=$(echo "$psoutput" | grep "$uid" | cut -d ' ' -f 12 | cut -d ':' -f 3)
    totalsecs=0
    while read secfield; do 
      totalsecs=$(( totalsecs + 10#$secfield ))
    done <<< "$secs"

    # At this point the variables totalhours totalmins and totalsecs contain the
    # total number of hours, minutes, and seconds of the CPU time of the
    # processes of the user with the UID we are iterating over. Now we must
    # convert the fields so if we have greater than 60 seconds in totalsecs
    # we need to continually decrease totalsecs by 60 and then increase totalmins
    # by one until we have less than 60 seconds in total secs (and do the same
    # to totalmins -> totalhours)
    while [ $totalsecs -gt 60 ]; do
      totalsecs=$(( totalsecs - 60 ))
      totalmins=$(( totalmins + 1 ))
    done

    while [ $totalmins -gt 60 ]; do
      totalmins=$(( totalmins - 60 ))
      totalhours=$(( totalhours + 1 ))
    done

    # Get the name from the comment field for this uid from the passwd database
    # if the user is a regular user (not a daemon)
    name=$(getent passwd | grep "*:$uid:" | cut -d ':' -f 5 |\
           cut -d ',' -f 1)

    # Determine if name is empty (if it is, we are dealing with a daemon, and
    # must extract the daemon's name from the passwd database.
    if [ -z "$name" ]; then
      name=$(getent passwd | grep "x:$uid:" | cut -d ':' -f 5)
    fi
    
    # Append the line containing the information we just extracted for this uid
    # to the variable we will output
    output="${output}$uid\t$totalhours:$totalmins:$totalsecs\t$name\n"

  done <<< "$uids"
  echo -ne "$output"
}

cpuusers
